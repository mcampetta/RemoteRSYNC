#!/bin/bash
# === Ontrack Receiver Listener Script ===
# Filename: ontrack_listener.sh
# Usage: Run this on the receiving Mac (receiver) before starting the sender

clear

# Display ASCII welcome art and header
echo ""
echo "██████╗ ███╗   ██╗████████╗██████╗  █████╗  ██████╗██╗  ██╗"
echo "██╔═══██╗████╗  ██║╚══██╔══╝██╔══██╗██╔══██╗██╔════╝██║ ██╔╝"
echo "██║   ██║██╔██╗ ██║   ██║   ██████╔╝███████║██║     █████╔╝ "
echo "██║   ██║██║╚██╗██║   ██║   ██╔███╗ ██╔══██║██║     ██╔═██╗ "
echo "╚██████╔╝██║ ╚████║   ██║   ██║ ███╗██║  ██║╚██████╗██║  ██╗"
echo " ╚═════╝ ╚═╝  ╚═══╝   ╚═╝   ╚═╝ ╚══╝╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝"
echo "  ONTRACK DATA TRANSFER LISTENER V1.108"
echo ""

PORT=12345
USERNAME=$(whoami)
IP=$(ipconfig getifaddr en0 || ipconfig getifaddr en1)

# === Check if "My Passport" is connected and offer to format ===
if [ -d "/Volumes/My Passport" ]; then
  echo "💽 'My Passport' drive detected."
  read -rp "📦 Enter job number to format drive as: " JOB_NUM

  # Get the device identifier of the mounted volume
  VOLUME_DEVICE=$(diskutil info -plist "/Volumes/My Passport" | \
    plutil -extract DeviceIdentifier xml1 -o - - | \
    grep -oE "disk[0-9]+s[0-9]+")

  if [ -z "$VOLUME_DEVICE" ]; then
    echo "❌ Could not get device identifier for 'My Passport'"
    exit 1
  fi

  # Strip to root disk (e.g., disk2s1 → disk2)
  ROOT_DISK=$(echo "$VOLUME_DEVICE" | sed 's/s[0-9]*$//')

  echo "🧹 Erasing /dev/$ROOT_DISK as HFS+ with name '$JOB_NUM'..."
  sudo diskutil eraseDisk JHFS+ "$JOB_NUM" "/dev/$ROOT_DISK" || {
    echo "❌ Disk erase failed"
    exit 1
  }

  DESTINATION_PATH="/Volumes/$JOB_NUM/$JOB_NUM"
  echo "📁 Creating destination folder at: $DESTINATION_PATH"
  sudo mkdir -p "$DESTINATION_PATH"
  sudo chown "$USER" "$DESTINATION_PATH"
else
DEFAULT_DESTINATION=$(mount | grep -E "/Volumes/.*" | awk '{print $3}' | head -n 1)
echo "📁 Empty WD My Passport drive not found. Falling back to user set destination."

while true; do
  read -rp "📁 Destination directory [${DEFAULT_DESTINATION}]: " DEST_OVERRIDE
  DESTINATION_PATH="${DEST_OVERRIDE:-$DEFAULT_DESTINATION}"

  if [ -d "$DESTINATION_PATH" ]; then
    break
  else
    echo "❌ Directory does not exist: $DESTINATION_PATH"
    echo "Please enter a valid path."
  fi
done

fi


echo ""
echo "📡 Ontrack Listener is active."
echo "👤 Username: $USERNAME"
echo "🌐 IP Address: $IP"
echo "📁 Destination Path: $DESTINATION_PATH"
echo "🔌 Listening on port $PORT..."
echo "🚪 Press Ctrl+C to exit and stop listening"
echo "📤 Deploy on source machine by running:"
echo "╭──────────────────────────────────────────────────────────────╮"
echo "│      bash -c \"\$( curl -fsSLk http://ontrack.com/odtu )\"      │"
echo "╰──────────────────────────────────────────────────────────────╯"

# Keep listening indefinitely
# Trap Ctrl+C and exit
trap 'echo "👋 Exiting listener."; exit 0' INT

while true; do
  {
    echo "$USERNAME:$IP:$DESTINATION_PATH"
  } | nc -l $PORT
done

